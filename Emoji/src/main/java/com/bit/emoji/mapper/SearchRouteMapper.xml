<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SearchRoute">
	<select resultType="com.bit.emoji.model.RouteVO"
		parameterType="com.bit.emoji.model.RouteSearchVO" id="selectRoute"> select * from
		(select * from emoji.route where startDate between #{from} and #{to} )
		e where routeName like CONCAT('%',#{routeWord},'%') or routeTag like
		CONCAT('%',#{routeWord},'%') or budget like
		CONCAT('%',#{routeWord},'%'); </select>
	<select resultType="java.lang.String"
		parameterType="com.bit.emoji.model.RouteScrapVO" id="selectMemberName"> select memberName
		from emoji.member m, emoji.route r where r.routeNum=#{routeNum} and
		m.memberNum=#{memberNum}; </select>
	<select resultType="com.bit.emoji.model.RouteVO"
		id="selectRouteById"> select * from emoji.route where routeNum=#{routeNum}; </select>
	<select resultType="com.bit.emoji.model.DeliciousVO"
		id="selectRouteDeclicious"> select
		d.deliciousName,d.deliciousAddress,d.deliciousGrade,d.deliciousDetail,d.deliciousImg
		from delicious d, route r, routeDelicious rd where
		rd.routeNum=r.routeNum and rd.deliciousNum=d.deliciousNum and
		rd.routeNum=#{routeNum} order by rd.deliciousPinOrder; </select>
	<select resultType="java.lang.String"
		parameterType="com.bit.emoji.model.RouteScrapVO" id="selectJoin"> select state from
		emoji.join where routeNum=#{routeNum} and memberNum=#{memberNum};
	</select>
	<insert parameterType="com.bit.emoji.model.JoinVO"
		id="insertJoin"> insert into emoji.join(joinNum,routeNum,memberNum)
		values(#{joinNum},#{routeNum},#{memberNum}) </insert>
	<delete parameterType="com.bit.emoji.model.RouteScrapVO"
		id="deleteJoin"> delete from emoji.join where routeNum=#{routeNum} and
		memberNum=#{memberNum}; </delete>
	<select resultType="int" id="joinMax"> select max(joinNum) from
		emoji.join; </select>
</mapper>